services:
  grafana:
    build:
      context: ../..
      dockerfile: docker/docker-files/grafana/Dockerfile.grafana
      args:
        - NGINX_HOST=${NGINX_HOST}
    #image: grafana/grafana-enterprise:11.2.2-ubuntu
    container_name: grafana
    hostname: ${HOST_GRAFANA}
    environment:
      - TZ=${TIME_ZONE}
      - GF_INSTALL_PLUGINS=marcusolsson-json-datasource,marcusolsson-dynamictext-panel,volkovlabs-form-panel,volkovlabs-echarts-panel
      - GF_SERVER_DOMAIN=${NGINX_HOST}
      - GF_SERVER_ROOT_URL=http://${HOST_GRAFANA}:${PORT_GRAFANA}/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_RENDERING_SERVER_URL=http://${HOST_GRAFANA_RENDERER}:${PORT_GRAFANA_RENDERER}/render
      - GF_RENDERING_CALLBACK_URL=http://${HOST_GRAFANA}:${PORT_GRAFANA}/grafana/
      - GF_LOG_FILTERS=rendering:debug
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_USERS_DEFAULT_THEME=light    
    volumes:
      - grafana_storage:/var/lib/grafana
    networks:
      - peresvet
    
  renderer:
    image: grafana/grafana-image-renderer:latest
    hostname: ${HOST_GRAFANA_RENDERER}
    ports:
      - ${PORT_GRAFANA_RENDERER}:${PORT_GRAFANA_RENDERER}
    environment:
      - RENDERING_MODE=clustered # для возможности одновременной обработки большого количества изображений
      - RENDERING_CLUSTERING_MODE=context
      - RENDERING_CLUSTERING_MAX_CONCURRENCY=6
    networks:
      - peresvet

networks:
  peresvet:
    driver: bridge
    ipam:
      config:
          - subnet: 10.66.0.0/16
            gateway: 10.66.0.1

volumes:
  grafana_storage: {}
